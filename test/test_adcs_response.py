# coding: utf-8

"""
    OORT Agent SDK Interface

    Client interface to the OORT agent.  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import oort_sdk_client
from oort_sdk_client.models.adcs_response import AdcsResponse  # noqa: E501
from oort_sdk_client.rest import ApiException

class TestAdcsResponse(unittest.TestCase):
    """AdcsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AdcsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = oort_sdk_client.models.adcs_response.AdcsResponse()  # noqa: E501
        if include_optional :
            return AdcsResponse(
                mode = '0', 
                age = 1.337, 
                controller = '0', 
                hk = oort_sdk_client.models.adcs_hk.AdcsHk(
                    control_error_angle_deg = 1.337, 
                    acs_mode_active = '0', 
                    euler_angles = oort_sdk_client.models.adcs_euler_t.Adcs_euler_t(
                        roll = 1.337, 
                        pitch = 1.337, 
                        yaw = 1.337, ), 
                    control_error_q = oort_sdk_client.models.adcs_quat_t.Adcs_quat_t(
                        q1 = 1.337, 
                        q2 = 1.337, 
                        q3 = 1.337, 
                        q4 = 1.337, ), 
                    lat_deg = 1.337, 
                    q_bo_est = oort_sdk_client.models.adcs_quat_t.Adcs_quat_t(
                        q1 = 1.337, 
                        q2 = 1.337, 
                        q3 = 1.337, 
                        q4 = 1.337, ), 
                    latlontrack_lat = 1.337, 
                    lease_active = 56, 
                    lon_deg = 1.337, 
                    eclipse_flag = 56, 
                    q_bi_est = oort_sdk_client.models.adcs_quat_t.Adcs_quat_t(
                        q1 = 1.337, 
                        q2 = 1.337, 
                        q3 = 1.337, 
                        q4 = 1.337, ), 
                    latlontrack_lon = 1.337, 
                    r_eci = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    altitude = 1.337, 
                    latlontrack_body_vector = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    omega_bo_est = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    acs_mode_cmd = '0', 
                    v_eci = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    qcf = oort_sdk_client.models.adcs_quat_t.Adcs_quat_t(
                        q1 = 1.337, 
                        q2 = 1.337, 
                        q3 = 1.337, 
                        q4 = 1.337, ), 
                    lease_time_remaining = 56, 
                    unix_timestamp = 1.337, 
                    omega_bi_est = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    control_error_omega = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), 
                    r_ecef = oort_sdk_client.models.adcs_xyz_float_t.Adcs_xyz_float_t(
                        x = 1.337, 
                        y = 1.337, 
                        z = 1.337, ), )
            )
        else :
            return AdcsResponse(
                mode = '0',
                age = 1.337,
        )

    def testAdcsResponse(self):
        """Test AdcsResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
